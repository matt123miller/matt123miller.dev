{"version":3,"file":"component---src-pages-contact-tsx-3c51935b92aac2ade019.js","mappings":"+JAkCA,IAxBiB,SAAC,GAAiD,IAA/CA,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,OAC5C,OAAID,EAEA,gBAAC,EAAAE,KAAD,CAAMC,GAAIL,GACR,uBAAKM,UAAS,sBAAuBH,EAAS,eAAiB,KAC5DF,IAOP,qBAAGK,UAAU,OAAOC,KAAMP,EAAMQ,IAAI,sBAAsBC,OAAO,UAC/D,uBAAKH,UAAS,sBAAuBH,EAAS,eAAiB,KAC5DF,M,mCCdT,IAJmC,SAAC,GAAD,IAAGE,EAAH,EAAGA,OAAH,OACjC,uBAAKG,UAAS,mBAAoBH,GAAU,e,4CCuB9C,IAlBsC,SAAC,GAAD,IAAGO,EAAH,EAAGA,MAAOP,EAAV,EAAUA,OAAQQ,EAAlB,EAAkBA,SAAlB,OACpC,uBAAKL,UAAU,wBACZK,GACC,sBAAIL,UAAS,6BAA8BH,GAAU,gBAClDQ,GAGL,sBACEL,UAAS,sDACPH,GAAU,gBAGXO,GAEH,gBAAC,IAAD,CAAWP,OAAQA,O,8GCGvB,EAhBmC,SAAC,GAAD,IACjCS,EADiC,EACjCA,KACAF,EAFiC,EAEjCA,MACAG,EAHiC,EAGjCA,QACAC,EAJiC,EAIjCA,cACAX,EALiC,EAKjCA,OALiC,OAOjC,gCACE,wBAAMG,UAAU,aAAaM,GAC7B,uBAAKN,WAAcH,EAAS,eAAiB,KAA/B,QACZ,sBAAIG,UAAU,8BAA8BI,GAC5C,qBAAGJ,UAAS,SAAUQ,GAAiB,KAAOD,M,2DCkCpD,EAxC8B,WAC5B,IAAME,EAAS,gBAACC,EAAA,EAAD,CAAMV,UAAU,aAAaM,KAAMK,EAAAA,IAAUC,KAAK,OAC3DC,EAAU,gBAACH,EAAA,EAAD,CAAMV,UAAU,aAAaM,KAAMQ,EAAAA,IAAWF,KAAK,OAC7DG,EAAQ,gBAACL,EAAA,EAAD,CAAMV,UAAU,aAAaM,KAAMU,EAAAA,IAAcJ,KAAK,OAEpE,OACE,gBAACK,EAAA,EAAD,CAAWC,SAAO,GAChB,gBAACC,EAAA,EAAD,CAAcf,MAAM,aAAaP,QAAM,IAEvC,uBAAKG,UAAU,kBAAkBoB,IAAI,MACnC,gBAACC,EAAA,EAAD,CAAU3B,KAAM4B,EAAAA,EAAAA,OAAczB,QAAM,GAClC,gBAAC,EAAD,CACES,KAAMG,EACNL,MAAM,SACNG,QAAQ,iBACRV,QAAM,MAKZ,uBAAKG,UAAU,kBAAkBoB,IAAI,MACnC,gBAACC,EAAA,EAAD,CAAU3B,KAAM4B,EAAAA,EAAAA,QAAezB,QAAM,GACnC,gBAAC,EAAD,CACES,KAAMO,EACNT,MAAM,UACNG,QAAQ,iBACRV,QAAM,MAKZ,uBAAKG,UAAU,kBAAkBoB,IAAI,SACnC,gBAACC,EAAA,EAAD,CAAU3B,KAAI,UAAY4B,EAAAA,EAAAA,MAAezB,QAAM,GAC7C,gBAAC,EAAD,CAAWS,KAAMS,EAAOX,MAAM,QAAQG,QAASe,EAAAA,EAAAA,MAAazB,QAAM,QCtC5E,EAP8B,kBAC5B,gBAAC0B,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAKpB,MAAM,YACX,gBAAC,EAAD","sources":["webpack://matt123miller.github.io/./src/components/LinkCard/index.tsx","webpack://matt123miller.github.io/./src/components/Separator/index.tsx","webpack://matt123miller.github.io/./src/components/TitleSection/index.tsx","webpack://matt123miller.github.io/./src/components/InfoBlock/index.tsx","webpack://matt123miller.github.io/./src/components/ContactInfo/index.tsx","webpack://matt123miller.github.io/./src/pages/contact.tsx"],"sourcesContent":["import React, { ReactChildren } from 'react';\nimport { Link } from 'gatsby';\n\ninterface Props {\n  link: string;\n  internal?: Boolean;\n  center?: Boolean;\n  children?: any;\n}\n\nconst LinkCard = ({ link, children, internal, center }: Props) => {\n  if (internal) {\n    return (\n      <Link to={link}>\n        <div className={`link-card-content ${center ? 'items-center' : ''}`}>\n          {children}\n        </div>\n      </Link>\n    );\n  }\n\n  return (\n    <a className=\"mr-2\" href={link} rel=\"noreferrer noopener\" target=\"_blank\">\n      <div className={`link-card-content ${center ? 'items-center' : ''}`}>\n        {children}\n      </div>\n    </a>\n  );\n};\n\nconst InternalLink = () => {};\n\nconst ExternalLink = () => {};\n\nexport default LinkCard;\n","import React from 'react';\n\ninterface Props {\n  center?: Boolean;\n}\n\nconst Separator: React.FC<Props> = ({ center }) => (\n  <div className={`separator-icon ${center && 'mx-auto'}`} />\n);\n\nexport default Separator;\n","import React from 'react';\n\nimport Separator from 'components/Separator';\n\ntype Props = {\n  title: string;\n  center?: Boolean;\n  subtitle?: string;\n};\n\n// It would be nice if I could decide what heading type to use inside as the main heading.\n// Pass children? Export different heading types? Pass an arg?\nconst TitleSection: React.FC<Props> = ({ title, center, subtitle }) => (\n  <div className=\"flex flex-col w-full\">\n    {subtitle && (\n      <h4 className={`text-xs w-full text-left ${center && 'text-center'}`}>\n        {subtitle}\n      </h4>\n    )}\n    <h2\n      className={`uppercase mb-4 text-lg font-bold w-full text-left ${\n        center && 'text-center'\n      }`}\n    >\n      {title}\n    </h2>\n    <Separator center={center} />\n  </div>\n);\n\nexport default TitleSection;\n","import React, { Fragment } from 'react';\n\nimport Icon from 'components/Icon';\n\ninterface Props {\n  center?: boolean;\n  title: string;\n  // @ts-ignore 'Icon' refers to a value, but is being used as a type here. Did you mean 'typeof Icon'?\"\n  icon?: Icon;\n  content?: React.ReactNode;\n  squashContent?: Boolean;\n}\n\nconst InfoBlock: React.FC<Props> = ({\n  icon,\n  title,\n  content,\n  squashContent,\n  center,\n}) => (\n  <>\n    <span className=\"icon mt-2\">{icon}</span>\n    <div className={`${center ? 'text-center ' : ' '}mb-2`}>\n      <h3 className=\"text-md mt-1 font-semibold\">{title}</h3>\n      <p className={`mt-1 ${squashContent && ''}`}>{content}</p>\n    </div>\n  </>\n);\n\nexport default InfoBlock;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport LinkCard from 'components/LinkCard';\nimport InfoBlock from 'components/InfoBlock';\nimport Container from 'components/Container';\nimport TitleSection from 'components/TitleSection';\nimport Icon, { IconProps } from 'components/Icon';\nimport {\n  FontAwesomeIcon,\n  FontAwesomeIconProps,\n} from '@fortawesome/react-fontawesome';\n\nimport { links } from 'data/Constants';\n\nimport { faGithub, faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { faPaperPlane } from '@fortawesome/free-solid-svg-icons';\n\nconst ContactInfo: React.FC = () => {\n  const github = <Icon className=\"text-white\" icon={faGithub} size=\"2x\" />;\n  const twitter = <Icon className=\"text-white\" icon={faTwitter} size=\"2x\" />;\n  const email = <Icon className=\"text-white\" icon={faPaperPlane} size=\"2x\" />;\n\n  return (\n    <Container section>\n      <TitleSection title=\"Contact me\" center />\n\n      <div className=\"w-full sm:w-1/3\" key=\"gh\">\n        <LinkCard link={links.github} center>\n          <InfoBlock\n            icon={github}\n            title=\"Github\"\n            content=\"@matt123miller\"\n            center\n          />\n        </LinkCard>\n      </div>\n\n      <div className=\"w-full sm:w-1/3\" key=\"tw\">\n        <LinkCard link={links.twitter} center>\n          <InfoBlock\n            icon={twitter}\n            title=\"Twitter\"\n            content=\"@matt123miller\"\n            center\n          />\n        </LinkCard>\n      </div>\n\n      <div className=\"w-full sm:w-1/3\" key=\"email\">\n        <LinkCard link={`mailto:${links.email}`} center>\n          <InfoBlock icon={email} title=\"Email\" content={links.email} center />\n        </LinkCard>\n      </div>\n    </Container>\n  );\n};\n\nexport default ContactInfo;\n","import React from 'react';\n\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\nimport ContactInfo from 'components/ContactInfo';\n\nconst ContactPage: React.FC = () => (\n  <Layout>\n    <SEO title=\"Contact\" />\n    <ContactInfo />\n  </Layout>\n);\n\nexport default ContactPage;\n"],"names":["link","children","internal","center","Link","to","className","href","rel","target","title","subtitle","icon","content","squashContent","github","Icon","faGithub","size","twitter","faTwitter","email","faPaperPlane","Container","section","TitleSection","key","LinkCard","links","Layout","SEO"],"sourceRoot":""}