---
import { getCollection } from "astro:content";
// import {} from 'astro:'
// import { promises as fs } from "node:fs";
// import { resolve } from "node:path";

import Badge from "@/components/Badge/index.astro";
import ExternalLink from "@/components/Icons/ExternalLink.astro";
import { links } from "@/constants";
import Layout from "../../layouts/Layout.astro";

// async function parse_dir_recursive(dir) {
//   const subdirs = await fs.readdir(dir);
//   const files = await Promise.all(
//     subdirs.map(async (subdir) => {
//       const res = resolve(dir, subdir);
//       return (await fs.stat(res)).isDirectory()
//         ? parse_dir_recursive(res)
//         : res;
//     })
//   );
//   return files.reduce((a, f) => a.concat(f), []);
// }

export async function getStaticPaths() {
  // console.log(import.meta.dirname);

  const blogEntries = await getCollection("blog");
  const pages = blogEntries.map((entry) => {
    // Can replace main with your development branch if needed.
    const editUrl = `${links.siteRepo}/tree/main/src/content/blog/${entry.id}`;
    return {
      params: { slug: entry.slug },
      props: {
        entry,
        editUrl,
      },
    };
  });

  return pages;
}

const { entry, editUrl } = Astro.props;
const { Content } = await entry.render();
---

<Layout title={entry.data.title}>
  <div class="max-w-screen-md w-full mx-auto p-5 mt-8">
    <h1>{entry.data.title}</h1>
    <div>
      {entry.data.tags.map((tag) => <Badge class="mr-4">{tag}</Badge>)}
      <span class="text-comment pt-1 mr-4">
        {entry.data.date.toLocaleDateString()}
      </span>
      <a
        class="animated-link external not-prose"
        href={editUrl}
        rel="me"
        target="_blank"
      >
        Edit this page on github<ExternalLink />
      </a>
    </div>
    <Content />
  </div>
</Layout>
